<?php
// $Id: uuid.install,v 1.1.2.4 2010/01/27 12:58:20 recidive Exp $

/**
 * Implementation of hook_enable().
 */
function uuid_enable() {
  module_load_include('inc', 'uuid', 'uuid.admin');
  uuid_sync();
}

/**
 * Implementation of hook_install().
 */
function uuid_install() {
  // Create tables.
  drupal_install_schema('uuid');
}

/**
 * Implementation of hook_schema().
 */
function uuid_schema() {
  return array(
    'uuid_node' => uuid_table_schema('node', 'nid'),
    'uuid_users' => uuid_table_schema('users', 'uid'),
    'uuid_node_revisions' => uuid_table_schema('node_revisions', 'vid'),
  );
}

/**
 * Return schema for a uuid table.
 *
 * @param $key
 *   Name of key field, e.g. nid for nodes.
 * @return
 *   Array with table structure definition (schema).
 */
function uuid_table_schema($table, $key = 'key') {
  return array(
    'fields' => array(
      $key => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => t('The primary key of the record which this UUID was generated for.'),
      ),
      'uuid' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => t('The Universally Unique Identifier.'),
      ),
    ),
    'primary key' => array($key),
    'indexes' => array(
      'uuid_'. $table .'_uuid_idx' => array('uuid'),
    ),
  );
}

/**
 * Implementation of hook_uninstall().
 */
function uuid_uninstall() {
  variable_del('uuid_automatic_for_nodes');
  variable_del('uuid_automatic_for_users');
  variable_del('uuid_automatic_for_taxonomy');
  
  // Remove tables.
  drupal_uninstall_schema('uuid');
}

/**
 * Implementation of hook_update().
 */
function uuid_update_6001() {
  $ret = array();
  
  db_create_table($ret, 'uuid_vocabulary', uuid_table_schema('vocabulary', 'vid'));
  db_create_table($ret, 'uuid_term_data', uuid_table_schema('term_data', 'tid'));
  
  return $ret;
}
