<?php
// $Id$

/**
 * @file
 * Main module functions for the uuid_user module.
 */

module_load_include('inc', 'uuid', 'uuid.common');

/**
 * Implementation of hook_menu().
 */
function uuid_user_menu() {
  $items = array();

  $items['admin/settings/uuid-user'] = array(
    'title' => 'Universally Unique IDentifier for users',
    'description' => 'Configure automatically UUID generation for users settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uuid_admin'),
    'access arguments' => array('administer users'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uuid.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_user().
 */
function uuid_user_user($op, &$edit, &$user, $category = NULL) {
  switch ($op) {
    case 'load':
      $user->uuid = db_result(db_query('SELECT uuid FROM {uuid_users} WHERE uid = %d', $user->uid));
      break;
    case 'insert':
      if (isset($user->uuid) && uuid_is_valid($user->uuid)) {
        db_query("INSERT INTO {uuid_users} (uid, uuid) VALUES (%d, '%s')", $user->uid, $user->uuid);
      }
      else if (variable_get('uuid_automatic_for_users', FALSE)) {
        $user->uuid = uuid_uuid();
        db_query("INSERT INTO {uuid_users} (uid, uuid) VALUES (%d, '%s')", $user->uid, $user->uuid);
      }
      break;
    case 'update':
      if (isset($user->uuid) && uuid_is_valid($user->uuid)) {
        $exists = db_result(db_query('SELECT 1 FROM {uuid_users} WHERE uid = %d', $user->uid));

        if (!$exists) {
          db_query("INSERT INTO {uuid_users} (uid, uuid) VALUES (%d, '%s')", $user->uid, $user->uuid);
        }
      }
      break;
    case 'delete':
      db_query('DELETE FROM {uuid_users} WHERE uid = %d', $node->uid);
      break;
  }
}

/**
 * Returns the user associated with a UUID.
 *
 * @return
 *   Either the $account object, or FALSE on failure.
 */
function user_get_by_uuid($uuid) {
  $uid = db_result(db_query("SELECT uid FROM {uuid_users} WHERE uuid = '%s'", $uuid));

  if ($uid) {
    return user_load(array('uid' => $uid));
  }
  else {
    return FALSE;
  }
}

/**
 * Implementation of hook_uuid_sync().
 */
function uuid_user_uuid_sync() {
  // Users.
  if (variable_get('uuid_automatic_for_users', FALSE)) {
    $result = db_query("SELECT uid FROM {users} WHERE uid NOT IN (SELECT uid FROM {uuid_users})");
    while($item = db_fetch_object($result)) {
      db_query("INSERT INTO {uuid_users} (uid, uuid) VALUES(%d, '%s')", $item->uid, uuid_uuid());
    }
  }
}
