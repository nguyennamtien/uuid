<?php
// $Id$

/**
 * @file
 * Main module functions for the uuid_comment module.
 */

module_load_include('inc', 'uuid', 'uuid.common');

/**
 * Implementation of hook_menu().
 *
 * Consider implementing hook_uuid_menu for this?
 */
function uuid_comment_menu() {
  $items = array();

  $items['admin/settings/uuid-comment'] = array(
    'title' => 'Universally Unique IDentifier for comments.',
    'description' => 'Configure automatically UUID generation for comments settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uuid_admin'),
    'access arguments' => array('administer comments'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uuid.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_comment().
 */
function uuid_comment_comment(&$a1, $op) {
  switch ($op) {
    // Make sure that a new entry gets made in the comments_uuid table when new content
    // is added.
    case 'insert':
      if (!empty($a1['uuid']) && uuid_is_valid($a1['uuid'])) {
        db_query("INSERT INTO {uuid_comments} (cid, uuid) VALUES (%d, '%s')", $a1['cid'], $a1['uuid']);
      }
      else if (variable_get('uuid_automatic_for_comments', FALSE)) {
        db_query("INSERT INTO {uuid_comments} (cid, uuid) VALUES (%d, '%s')", $a1['cid'], uuid_uuid());
      }
      break;

    case 'update':
      if (isset($a1['uuid']) && uuid_is_valid($a1['uuid'])) {
        $exists = db_result(db_query('SELECT 1 FROM {uuid_comments} WHERE cid = %d', $a1['cid']));

        if (!$exists && variable_get('uuid_automatic_for_comments', FALSE)) {
          db_query("INSERT INTO {uuid_comments} (cid, uuid) VALUES (%d, '%s')", $a1['cid'], uuid_uuid());
        }
      }
      break;

    // Clean up comments_uuid table when content is deleted.
    case 'delete':
      db_query("DELETE FROM {uuid_comments} WHERE cid = %d", $a1->cid);
      break;
  }
}

/**
 * Implementation of hook_uuid_sync().
 */
function uuid_comment_uuid_sync() {

  // Comments.
  if (variable_get('uuid_automatic_for_comments', FALSE)) {
    $result = db_query("SELECT cid FROM {comments} WHERE cid NOT IN (SELECT cid FROM {uuid_comments})");
    while($item = db_fetch_object($result)) {
      db_query("INSERT INTO {uuid_comments} (cid, uuid) VALUES(%d, '%s')", $item->cid, uuid_uuid());
    }
  }
}
