<?php
// $Id$

/**
 * @file
 * Main module functions for the uuid_taxonomy module.
 */

module_load_include('inc', 'uuid', 'uuid.common');

/**
 * Implementation of hook_menu().
 */
function uuid_taxonomy_menu() {
  $items = array();

  $items['admin/settings/uuid-taxonomy'] = array(
    'title' => 'Universally Unique IDentifier for taxonomies',
    'description' => 'Configure automatically UUID generation for taxonomies settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uuid_admin'),
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'uuid.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_taxonomy().
 */
function uuid_taxonomy_taxonomy($op, $type, $array = NULL) {
  $types = array(
    'term' => array(
      'table' => 'uuid_term_data',
      'field' => 'tid',
    ),
    'vocabulary' => array(
      'table' => 'uuid_vocabulary',
      'field' => 'vid',
    ),
  );
  
  if (array_key_exists($type, $types) && in_array($array['vid'], variable_get('uuid_automatic_for_taxonomy', array()))) {
    $field = $types[$type]['field'];
    switch ($op) {
      case 'insert':
        if (empty($array['uuid']) || !uuid_is_valid($array['uuid'])) {
          $array['uuid'] = uuid_uuid();
        }
        db_query("INSERT INTO {" . $types[$type]['table'] . "} ($field, uuid) VALUES (%d, '%s')",
          $array[$types[$type]['field']], $array['uuid']);
        break;
      case 'delete':
        db_query("DELETE FROM {". $types[$type]['table'] ."} WHERE $field = %d", $array[$types[$type]['field']]);
        break;
    }
  }
}

/**
 * Implementation of hook_uuid_sync().
 */
function uuid_taxonomy_uuid_sync() {
  // Remove disabled vocabularies.
  $vids = array_filter($vids);
  if ($vids) {
    $placeholders = db_placeholders($vids, 'int');

    // Vocabularies.
    $result = db_query("SELECT v.vid FROM {vocabulary} AS v WHERE v.vid IN (" . $placeholders . ") AND NOT EXISTS (SELECT vid FROM {uuid_vocabulary} WHERE vid = v.vid)", $vids);
    while ($item = db_fetch_object($result)) {
      db_query("INSERT INTO {uuid_vocabulary} (vid, uuid) VALUES(%d, '%s')", $item->vid, uuid_uuid());
    }

    // Terms.
    $result = db_query("SELECT td.tid FROM {term_data} AS td WHERE td.vid IN (" . $placeholders . ") AND NOT EXISTS (SELECT tid FROM {uuid_term_data} WHERE tid = td.tid)", $vids);
    while ($item = db_fetch_object($result)) {
      db_query("INSERT INTO {uuid_term_data} (tid, uuid) VALUES(%d, '%s')", $item->tid, uuid_uuid());
    }
  }
}
